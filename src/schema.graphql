
type Author {
  name: String!
  id: String!
  posts: [Post]
}

type Post {
  id: String!
  title: String!
  author: Author
}

type User {
  _id: String!
  email: String!
}

type Client {
  _id: String!
  name: String!
  address: String!
  zipcode: String!
  telephone: String!
  city: String!
  user: String!
  type: String
}

type Query {
  posts: [Post]
  authors: [Author]
  users: [User]
  user: User
  client(_id: String): Client
  clients(type: [String], city: [String]): [Client]
}

type Token {
  token: String!
}

input ClientInput {
  _id: String
  name: String
  address: String
  zipcode: String
  city: String
  telephone: String
  type: String
}

type Mutation {
  addClient(client: ClientInput): Client
  updateClient(client: ClientInput): Client
  
  signup(email: String!, password: String!, firstName: String!, lastName: String!): User
  login(email: String!, password: String!): Token

  seedClients(amount: Int!): [Client]
}

schema {
  query: Query
  mutation: Mutation
}